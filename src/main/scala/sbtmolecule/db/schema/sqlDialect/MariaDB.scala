package sbtmolecule.db.schema.sqlDialect

import molecule.base.metaModel.{CardOne, CardSeq, MetaAttribute}

object MariaDB extends Dialect {

  override def tpe(metaAttribute: MetaAttribute): String = {
    if (metaAttribute.attr == "id")
      "BIGINT AUTO_INCREMENT PRIMARY KEY"
    else metaAttribute.card match {
      case _: CardOne => metaAttribute.baseTpe match {
        case "ID"             => "BIGINT"
        case "String"         => "LONGTEXT"
        case "Int"            => "INT"
        case "Long"           => "BIGINT"
        case "Float"          => "REAL"
        case "Double"         => "DOUBLE"
        case "Boolean"        => "TINYINT(1)"
        case "BigInt"         => "DECIMAL(65, 0)"
        case "BigDecimal"     => "DECIMAL(65, 30)"
        case "Date"           => "BIGINT" // Using UNIX timestamp
        case "Duration"       => "TINYTEXT"
        case "Instant"        => "TINYTEXT"
        case "LocalDate"      => "TINYTEXT"
        case "LocalTime"      => "TINYTEXT"
        case "LocalDateTime"  => "TINYTEXT"
        case "OffsetTime"     => "TINYTEXT"
        case "OffsetDateTime" => "TINYTEXT"
        case "ZonedDateTime"  => "TINYTEXT"
        case "UUID"           => "TINYTEXT"
        case "URI"            => "TEXT"
        case "Byte"           => "TINYINT"
        case "Short"          => "SMALLINT"
        case "Char"           => "CHAR"
      }

      case _: CardSeq => metaAttribute.baseTpe match {
        case "Byte" => "LONGBLOB" // special for byte arrays
        case _      => "JSON"
      }
      case _          => "JSON"
    }
  }

  // https://dev.mysql.com/doc/mysqld-version-reference/en/keywords.html
  override def reservedKeyWords: List[String] = List(
    "accessible",
    "action",
    "add",
    "all",
    "alter",
    "analyze",
    "and",
    "as",
    "asc",
    "asensitive",
    "before",
    "between",
    "bigint",
    "binary",
    "bit",
    "blob",
    "body",
    "both",
    "by",
    "call",
    "cascade",
    "case",
    "change",
    "char",
    "character",
    "check",
    "collate",
    "column",
    "condition",
    "constraint",
    "continue",
    "convert",
    "create",
    "cross",
    "current_date",
    "current_role",
    "current_time",
    "current_timestamp",
    "current_user",
    "cursor",
    "database",
    "databases",
    "date",
    "day_hour",
    "day_microsecond",
    "day_minute",
    "day_second",
    "dec",
    "decimal",
    "declare",
    "default",
    "delayed",
    "delete",
    "delete_domain_id",
    "desc",
    "describe",
    "deterministic",
    "distinct",
    "distinctrow",
    "div",
    "do_domain_ids",
    "double",
    "drop",
    "dual",
    "each",
    "else",
    "elseif",
    "elsif",
    "enclosed",
    "enum",
    "escaped",
    "except",
    "exists",
    "exit",
    "explain",
    "false",
    "fetch",
    "float",
    "float4",
    "float8",
    "for",
    "force",
    "foreign",
    "from",
    "fulltext",
    "general",
    "goto",
    "grant",
    "group",
    "having",
    "high_priority",
    "history",
    "hour_microsecond",
    "hour_minute",
    "hour_second",
    "if",
    "ignore",
    "ignore_domain_ids",
    "ignore_server_ids",
    "in",
    "index",
    "infile",
    "inner",
    "inout",
    "insensitive",
    "insert",
    "int",
    "int1",
    "int2",
    "int3",
    "int4",
    "int8",
    "integer",
    "intersect",
    "interval",
    "into",
    "is",
    "iterate",
    "join",
    "key",
    "keys",
    "kill",
    "leading",
    "leave",
    "left",
    "like",
    "limit",
    "linear",
    "lines",
    "load",
    "localtime",
    "localtimestamp",
    "lock",
    "long",
    "longblob",
    "longtext",
    "loop",
    "low_priority",
    "master_heartbeat_period",
    "master_ssl_verify_server_cert",
    "match",
    "maxvalue",
    "mediumblob",
    "mediumint",
    "mediumtext",
    "middleint",
    "minus",
    "minute_microsecond",
    "minute_second",
    "mod",
    "modifies",
    "natural",
    "no",
    "no_write_to_binlog",
    "not",
    "null",
    "numeric",
    "offset",
    "on",
    "optimize",
    "option",
    "optionally",
    "or",
    "order",
    "others",
    "out",
    "outer",
    "outfile",
    "over",
    "package",
    "page_checksum",
    "parse_vcol_expr",
    "partition",
    "period",
    "position",
    "precision",
    "primary",
    "procedure",
    "purge",
    "raise",
    "range",
    "read",
    "read_write",
    "reads",
    "real",
    "recursive",
    "ref_system_id",
    "references",
    "regexp",
    "release",
    "rename",
    "repeat",
    "replace",
    "require",
    "resignal",
    "restrict",
    "return",
    "returning",
    "revoke",
    "right",
    "rlike",
    "row_number",
    "rownum",
    "rows",
    "rowtype",
    "schema",
    "schemas",
    "second_microsecond",
    "select",
    "sensitive",
    "separator",
    "set",
    "show",
    "signal",
    "slow",
    "smallint",
    "spatial",
    "specific",
    "sql",
    "sql_big_result",
    "sql_calc_found_rows",
    "sql_small_result",
    "sqlexception",
    "sqlstate",
    "sqlwarning",
    "ssl",
    "starting",
    "stats_auto_recalc",
    "stats_persistent",
    "stats_sample_pages",
    "straight_join",
    "sysdate",
    "system",
    "system_time",
    "table",
    "terminated",
    "text",
    "then",
    "time",
    "timestamp",
    "tinyblob",
    "tinyint",
    "tinytext",
    "to",
    "trailing",
    "trigger",
    "true",
    "undo",
    "union",
    "unique",
    "unlock",
    "unsigned",
    "update",
    "usage",
    "use",
    "using",
    "utc_date",
    "utc_time",
    "utc_timestamp",
    "values",
    "varbinary",
    "varchar",
    "varcharacter",
    "varying",
    "versioning",
    "when",
    "where",
    "while",
    "window",
    "with",
    "without",
    "write",
    "xor",
    "year_month",
    "zerofill",
  )
}
